<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Handbooks on Eve Documentation</title>
    <link>http://docs-next.witheve.com/v0.3/handbook/index.xml</link>
    <description>Recent content in Handbooks on Eve Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://docs-next.witheve.com/v0.3/handbook/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title></title>
      <link>http://docs-next.witheve.com/v0.3/handbook/core/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs-next.witheve.com/v0.3/handbook/core/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://docs-next.witheve.com/v0.3/handbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs-next.witheve.com/v0.3/handbook/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Standard Library</title>
      <link>http://docs-next.witheve.com/v0.3/handbook/libraries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs-next.witheve.com/v0.3/handbook/libraries/</guid>
      <description>

&lt;h1 id=&#34;standard-library&#34;&gt;Standard Library&lt;/h1&gt;

&lt;h2 id=&#34;aggregates&#34;&gt;Aggregates&lt;/h2&gt;

&lt;table&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;gather/sort&lt;/b&gt; - Generates an ordering for a set
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;for&lt;/strong&gt; - the set to sort&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;per&lt;/strong&gt; - (optional) - one or more attributes by which to group `for`&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;direction&lt;/strong&gt; - (optional) - direction in which to sort `for`. Possible values are:
          &lt;ul class=&#34;arglist&#34;&gt;
            &lt;li&gt;&#39;up&#39; - smallest to largest; default option&lt;/li&gt;
            &lt;li&gt;&#39;down&#39; - largest to smallest&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// sorts the students by GPA
[#student GPA]
index = sort[for: GPA]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;gather/count&lt;/b&gt; - Returns the number of elements in a set
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;for&lt;/strong&gt; - the set to count over&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;per&lt;/strong&gt; - (optional) - one or more attributes by which to group `for`&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// counts the number of citizens in each state
residents = [#citizen state]
population = count[given: residents, per: state]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;gather/sum&lt;/b&gt; - Returns the sum of values in a set of attributes
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;for&lt;/strong&gt; - the set to gather&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; - the specific variable to be summed&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;per&lt;/strong&gt; - (optional) - one or more attributes by which to group `for`&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// returns the sum of salaries for each department
employees = [#employee salary department]
expenses = gather/sum[for: employees, value: employees.salary, per: department]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;+&lt;/b&gt; - Adds two numbers
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      Infix notation
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;total-debt = credit-card + debit-card&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;-&lt;/b&gt; - Subtracts two numbers
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      Infix notation
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;remaining-debt = total-debt - amount_paid&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;*&lt;/b&gt; - Multiplies two numbers
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      Infix notation
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;yearly-payments = monthly-payments * 12&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;/&lt;/b&gt; - Divides two numbers
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      Infix notation
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;monthly-payments = yearly-payments / 12&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/floor&lt;/b&gt; - Rounds a number down
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; - the number to be rounded down&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// x rounded down to 34
x = math/floor[value: 34.2]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/ceiling&lt;/b&gt; - Rounds a number up
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; - the number to be rounded up&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// x rounded up to 35
x = math/ceiling[value: 34.2]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/round&lt;/b&gt; - Rounds a number to the nearest integer
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; - the number to be rounded to the nearest integer&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// x rounded to 34
x = math/floor[value: 34.2]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/sin&lt;/b&gt; - Sine of an angle
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;degrees&lt;/strong&gt; - the angle in degrees&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// r calculated to 1
r = math/sin[degrees: 90]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/cos&lt;/b&gt; - Cosine of an angle
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;degrees&lt;/strong&gt; - the angle in degrees&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// r calculated to 0
r = math/cos[degrees: 90]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/tan&lt;/b&gt; - Tangent of an angle
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;degrees&lt;/strong&gt; - the angle in degrees&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// r calculated to 1
r = math/tan[degrees: 45]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/max&lt;/b&gt; - The greater of two values
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;a&lt;/strong&gt; - a value to compare&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;b&lt;/strong&gt; - another value to compare&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// takes the higher score
[#scores pac-man donkey-kong]
best-score = math/min[a: pac-man, b: donkey-kong]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/min&lt;/b&gt; - The lesser of two values
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;a&lt;/strong&gt; - a value to compare&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;b&lt;/strong&gt; - another value to compare&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// takes the lower score
[#scores pac-man donkey-kong]
worst-score = math/min[a: pac-man, b: donkey-kong]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/mod&lt;/b&gt; - Modulo division
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; - the number to be divided (dividend)&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;by&lt;/strong&gt; - the number by which to divide (divisor)&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// m is the remainder, 1
m = math/mod[value: 5, by: 2]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/absolute&lt;/b&gt; - Absolute value of a number
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;value&lt;/strong&gt; - the number whose absolute value is found&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// number of hours from the prime meridian
[#city latitude longitude]
hours-from-gmt = math/absolute[value: latitude] / 15&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/to-fixed&lt;/b&gt; - Formats a number as a string to a certain number of decimal places
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;a&lt;/strong&gt; - the number to be formatted&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;b&lt;/strong&gt; - the number of decimal places to which `a` will be formatted&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// pi represented as the string &#34;3.14&#34;
[#circle circumference diameter]
pi = math/to-fixed[a: (circumference / diameter), b: 2]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;math/range&lt;/b&gt; - Generates a range of numbers
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;start&lt;/strong&gt; - the start of the range&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;stop&lt;/strong&gt; - the end of the range&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// generates integers 1 through 10
y = math/range[start: 1, stop: 10]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;random/number&lt;/b&gt; - Generates a random number between 1 and 0
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;seed&lt;/strong&gt; - a number used to initialize the random number generator&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// generates a random number every second
[#time minutes seconds]
x = random/number[seed: seconds]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&#34;strings&#34;&gt;Strings&lt;/h2&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;string/replace&lt;/b&gt; - Replaces a string of text with another
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;text&lt;/strong&gt; - the text in which to search for strings and replace them&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;replace&lt;/strong&gt; - the string to be replaced&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;with&lt;/strong&gt; - the string that will replace `replace`&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// Americanized version of British spelling
[#website body]
american-version = string/replace[text: body, replace: &#34;flavour&#34;, with: &#34;flavor&#34;]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;string/get&lt;/b&gt; - Gets a character from a specific location in a string
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;text&lt;/strong&gt; - the text to be searched&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;at&lt;/strong&gt; - the location to be searched&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// finds the 17th letter of the alphabet
alphabet = &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#34;
letter = string/get[text: alphabet, at: 17]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;string/uppercase&lt;/b&gt; -Converts a string to uppercase
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;text&lt;/strong&gt; - the text to be converted&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;funny = &#34;lol&#34;
really-funny = string/uppercase[text: funny]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;string/lowercase&lt;/b&gt; - Converts a string to lowercase
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;text&lt;/strong&gt; - the text to be converted&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;really-funny = &#34;LOL&#34;
down-a-notch = string/uppercase[text: really-funny]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;string/index-of&lt;/b&gt; - Returns the position of the first occurrence of a specified value in a string
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;text&lt;/strong&gt; - the text to be searched&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;substring&lt;/strong&gt; - the string to be found in `text`&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// Eve is in developers, starting at an index of 2
index = string/index-of[text: &#34;developers&#34;, substring: &#34;eve&#34;&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td colspan=&#34;2&#34;&gt;
      &lt;b&gt;string/codepoint-length&lt;/b&gt; - Returns the length of a string in Unicode code points.
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt;
      &lt;ul class=&#34;arglist&#34;&gt;
        &lt;li&gt;&lt;strong&gt;text&lt;/strong&gt; - the string whose length is found&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;code&gt;// the code point length of the word &#34;unicode&#34;
string = &#34;unicode&#34;
length-in-js = string/codepoint-length[text: string]&lt;/code&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eve Documentation</title>
    <link>https://witheve.github.io/docs/</link>
    <description>Recent content on Eve Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Mar 2016 21:07:13 +0100</lastBuildDate>
    <atom:link href="https://witheve.github.io/docs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Material for Hugo</title>
      <link>https://witheve.github.io/docs/</link>
      <pubDate>Tue, 08 Mar 2016 21:07:13 +0100</pubDate>
      
      <guid>https://witheve.github.io/docs/</guid>
      <description>

&lt;h2 id=&#34;beautiful-documentation&#34;&gt;Beautiful documentation&lt;/h2&gt;

&lt;p&gt;Material is a theme for &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, a fast and flexible static site generator. It is built using Google&amp;rsquo;s &lt;a href=&#34;https://www.google.com/design/spec/material-design/introduction.html&#34;&gt;material design&lt;/a&gt;
guidelines, fully responsive, optimized for touch and pointer devices as well
as all sorts of screen sizes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://witheve.github.io/docs/images/screen.png&#34; alt=&#34;Material Screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Material is very lightweight – it is built from scratch using Javascript and
CSS that weighs less than 30kb (minified, gzipped and excluding Google Fonts
and Analytics). Yet, it is highly customizable and degrades gracefully in older
browsers.&lt;/p&gt;

&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;

&lt;p&gt;Install with &lt;code&gt;git&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:digitalcraftsman/hugo-material-docs.git themes/hugo-material-docs
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Beautiful, readable and very user-friendly design based on Google&amp;rsquo;s material
design guidelines, packed in a full responsive template with a well-defined
and &lt;a href=&#34;No page found with path or logical name &#34;getting-started/index.md&#34;.
&#34;&gt;easily customizable color palette&lt;/a&gt;, great typography, as well as a
beautiful search interface and footer.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Well-tested and optimized Javascript and CSS including a cross-browser
fixed/sticky header, a drawer that even works without Javascript using
the &lt;a href=&#34;http://tutorialzine.com/2015/08/quick-tip-css-only-dropdowns-with-the-checkbox-hack/&#34;&gt;checkbox hack&lt;/a&gt; with fallbacks, responsive tables that scroll when
the screen is too small and well-defined print styles.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Extra configuration options like a &lt;a href=&#34;No page found with path or logical name &#34;getting-started/index.md&#34;.
&#34;&gt;project logo&lt;/a&gt;, links to the authors
&lt;a href=&#34;No page found with path or logical name &#34;getting-started/index.md&#34;.
&#34;&gt;GitHub and Twitter accounts&lt;/a&gt; and display of the amount of stars the
project has on GitHub.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Web application capability on iOS – when the page is saved to the homescreen,
it behaves and looks like a native application.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See the &lt;a href=&#34;No page found with path or logical name &#34;getting-started/index.md&#34;.
&#34;&gt;getting started guide&lt;/a&gt; for instructions how to get
it up and running.&lt;/p&gt;

&lt;h2 id=&#34;acknowledgements&#34;&gt;Acknowledgements&lt;/h2&gt;

&lt;p&gt;Last but not least a big thank you to &lt;a href=&#34;https://github.com/squidfunk&#34;&gt;Martin Donath&lt;/a&gt;. He created the original &lt;a href=&#34;https://github.com/squidfunk/mkdocs-material&#34;&gt;Material theme&lt;/a&gt; for Hugo&amp;rsquo;s companion &lt;a href=&#34;http://www.mkdocs.org/&#34;&gt;MkDocs&lt;/a&gt;. This port wouldn&amp;rsquo;t be possible without him.&lt;/p&gt;

&lt;p&gt;Furthermore, thanks to &lt;a href=&#34;https://gihub.com/spf13&#34;&gt;Steve Francia&lt;/a&gt; for creating Hugo and the &lt;a href=&#34;https://github.com/spf13/hugo/graphs/contributors&#34;&gt;awesome community&lt;/a&gt; around the project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/action-operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/action-operators/</guid>
      <description>

&lt;h1 id=&#34;action-operators&#34;&gt;Action Operators&lt;/h1&gt;

&lt;p&gt;We have four operators for performing actions on objects in the Eve DB: add, set, remove and merge:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;add.md&#34;&gt;Add&lt;/a&gt; ( &lt;code&gt;+=&lt;/code&gt; ) - adds values to an attribute&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;set.md&#34;&gt;Set&lt;/a&gt; ( &lt;code&gt;:=&lt;/code&gt; ) - sets the value of an attribute&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;remove.md&#34;&gt;Remove&lt;/a&gt; ( &lt;code&gt;-=&lt;/code&gt; ) - removes attribute with value from an object&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;merge.md&#34;&gt;Merge&lt;/a&gt; ( &lt;code&gt;&amp;lt;-&lt;/code&gt; ) - merges one object into another&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/action-phase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/action-phase/</guid>
      <description>

&lt;h1 id=&#34;action-phase&#34;&gt;Action Phase&lt;/h1&gt;

&lt;p&gt;used to update or create records&lt;/p&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;In the action phase of a block, you can add or modify records using information collected in the match phase.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;action&lt;/code&gt; phase of a block indicates that we are changing the Eve DB in some way. This phase is preceded by either &lt;code&gt;bind&lt;/code&gt; or &lt;code&gt;commit&lt;/code&gt;. While the &lt;code&gt;match&lt;/code&gt; phase can be omitted, the &lt;code&gt;action&lt;/code&gt; phase is required; the block doesn&amp;rsquo;t do anything without an &lt;code&gt;action&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The transition to the &lt;code&gt;action&lt;/code&gt; phase means we&amp;rsquo;re no longer able to use any statements available in the &lt;code&gt;match&lt;/code&gt; phase, e.g. &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;, aggregates, some expressions, etc.&lt;/p&gt;

&lt;h2 id=&#34;records-and-the-action-phase&#34;&gt;Records and the Action Phase&lt;/h2&gt;

&lt;p&gt;In the action phase, you create or update records, whereas in the match phase you match records in the Eve DB.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;p&gt;A block with only an action phase&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind
  [#div text: &amp;quot;Hello, world&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;see-also&#34;&gt;See Also&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;bind.md&#34;&gt;bind&lt;/a&gt; | &lt;a href=&#34;commit.md&#34;&gt;commit&lt;/a&gt; | &lt;a href=&#34;match.md&#34;&gt;match&lt;/a&gt; | &lt;a href=&#34;match-phase.md&#34;&gt;match phase&lt;/a&gt; | &lt;a href=&#34;context.md&#34;&gt;contexts&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/add/</guid>
      <description>

&lt;h1 id=&#34;add-operator&#34;&gt;Add Operator&lt;/h1&gt;

&lt;p&gt;Adds a value to an attribute on a record&lt;/p&gt;

&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;record.attribute += value
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;see-also&#34;&gt;See Also&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;set.md&#34;&gt;set operator&lt;/a&gt; | &lt;a href=&#34;remove.md&#34;&gt;remove operator&lt;/a&gt; | &lt;a href=&#34;merge.md&#34;&gt;merge operator&lt;/a&gt; | &lt;a href=&#34;action-phase.md&#34;&gt;action phase&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/aggregates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/aggregates/</guid>
      <description>

&lt;h1 id=&#34;aggregates&#34;&gt;Aggregates&lt;/h1&gt;

&lt;p&gt;Aggregates are functions that take an input set and produce an output set, typically with a different cardinality than the input set. Aggregates are called just like other functions in Eve. For example, &lt;code&gt;count&lt;/code&gt; takes an input set of cardinality &lt;code&gt;N&lt;/code&gt; and produces a set of cardinality &lt;code&gt;1&lt;/code&gt; as the result. A familiar analogue in other languages is the &lt;code&gt;reduce()&lt;/code&gt; function. Here is an example of an aggregate in use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;total-burgers = sum[value: burgers, given: (burgers, guest)]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One important consideration when using an aggregate is the input set. Due to set semantics, the result may not be what you expect if the input set contains duplicate elements.&lt;/p&gt;

&lt;p&gt;Recall that a set is an unordered collection of unique elements. In our example, &lt;code&gt;burgers = (3, 0, 1, 2, 1)&lt;/code&gt;, which as a set is &lt;code&gt;{3, 0, 1, 2}&lt;/code&gt;. Thus &lt;code&gt;sum[value: burgers, given: burgers] = 6&lt;/code&gt;, which is not what we expect. However, when we say &lt;code&gt;sum[value: burgers, given: (burgers, guests)]&lt;/code&gt; then each burger is associated with a corresponding guest, making each element unique, e.g. &lt;code&gt;(burgers, guest) = {{3, Arthur}, {0, Carol}, {1, Duncan}, {2, James}, {1, Sam}}&lt;/code&gt;. Summing burgers given this set yields the expected result of &lt;code&gt;7&lt;/code&gt;, because the duplicated 1 is now unique.&lt;/p&gt;

&lt;h2 id=&#34;available-aggregates&#34;&gt;Available Aggregates&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;sum&lt;/li&gt;
&lt;li&gt;count&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/bind/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/bind/</guid>
      <description>

&lt;h1 id=&#34;bind&#34;&gt;bind&lt;/h1&gt;

&lt;p&gt;adds or updates records while overwriting old versions&lt;/p&gt;

&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;bind

bind @context

bind (@context1, ..., @contextN)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;bind&lt;/code&gt; signifies the beginning of the action phase of a block. The semantics of bind are to update or create new objects, while removing previous versions. By default, bound records are directed to a default local context.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bind @context&lt;/code&gt; directs bound records to a particular context.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bind (@context1, ... @contextN)&lt;/code&gt; directs bound records to multiple contexts.&lt;/p&gt;

&lt;h2 id=&#34;bind-vs-commit&#34;&gt;Bind vs. Commit&lt;/h2&gt;

&lt;p&gt;Bind and commit are both action fences, so they have close but very different behavior. Let&amp;rsquo;s look at how the two differ. Consider the following block that reads the current time, and prints it to the screen:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match
  [#time seconds]
commit
  [#div text: seconds]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you run this, you&amp;rsquo;ll see that every second you a new number gets added to the screen, while all the previous numbers remain. That&amp;rsquo;s the behavior of commit. When you commit something, you&amp;rsquo;re adding it to the database permanently i.e. &lt;strong&gt;if the supporting records are removed, the committed records stay&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s look at what bind does:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match
  [#time seconds]
bind
  [#div text: seconds]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instead of keeping the old record, bind replaces it with a new record. Therefore we only ever have one time on the screen, the current time. That&amp;rsquo;s because the display of the old time was supported by data that is no longer there. With a bind, &lt;strong&gt;if the supporting records are removed, then the bound records are removed&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;h2 id=&#34;see-also&#34;&gt;See Also&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;commit.md&#34;&gt;commit&lt;/a&gt; | &lt;a href=&#34;context.md&#34;&gt;contexts&lt;/a&gt; | &lt;a href=&#34;match.md&#34;&gt;match&lt;/a&gt; | &lt;a href=&#34;match-phase.md&#34;&gt;match phase&lt;/a&gt; | &lt;a href=&#34;action-phase.md&#34;&gt;action phase&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/blocks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/blocks/</guid>
      <description>

&lt;h1 id=&#34;blocks&#34;&gt;Blocks&lt;/h1&gt;

&lt;p&gt;Blocks compose Eve programs&lt;/p&gt;

&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;```
match
  ...
bind or commit
  ...
```

```
bind or commit
  ...
```
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;Each block is written in two phases: &lt;code&gt;match&lt;/code&gt; then &lt;code&gt;action&lt;/code&gt;. In the &lt;code&gt;match&lt;/code&gt; phase, we ask Eve for known facts, and we might transform those facts using temporary variables. In the &lt;code&gt;action&lt;/code&gt; phase we perform some action on the Eve DB to either add or remove facts.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;p&gt;A block with match and action phases&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match
  [name]
bind
  [#div text: name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A black with only a commit phase&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;commit
  [@Stephanie]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;see-also&#34;&gt;See Also&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;match-phase.md&#34;&gt;match phase&lt;/a&gt; | &lt;a href=&#34;action-phase.md&#34;&gt;action phase&lt;/a&gt; | &lt;a href=&#34;match.md&#34;&gt;match&lt;/a&gt; | &lt;a href=&#34;bind.md&#34;&gt;bind&lt;/a&gt; | &lt;a href=&#34;commit.md&#34;&gt;commit&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/commit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/commit/</guid>
      <description>

&lt;h1 id=&#34;commit&#34;&gt;commit&lt;/h1&gt;

&lt;p&gt;adds or updates records while keeping old versions&lt;/p&gt;

&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;commit

commit @context

commit (@context1, ..., @contextN)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;commit&lt;/code&gt; signifies the beginning of the action phase of a block. The semantics of commit are to update or create new objects, while leaving previous versions in tact. By default, committed records are directed to a default local context.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;commit @context&lt;/code&gt; directs committed records to a particular context.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;commit (@context1, ..., @contextN)&lt;/code&gt; directs committed records to multiple contexts.&lt;/p&gt;

&lt;h2 id=&#34;bind-vs-commit&#34;&gt;Bind vs. Commit&lt;/h2&gt;

&lt;p&gt;Bind and commit are both action fences, so they have close but very different behavior. Let&amp;rsquo;s look at how the two differ. Consider the following block that reads the current time, and prints it to the screen:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match
  [#time seconds]
commit
  [#div text: seconds]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you run this, you&amp;rsquo;ll see that every second you a new number gets added to the screen, while all the previous numbers remain. That&amp;rsquo;s the behavior of commit. When you commit something, you&amp;rsquo;re adding it to the database permanently i.e. &lt;strong&gt;if the supporting records are removed, the committed records stay&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s look at what bind does:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match
  [#time seconds]
bind
  [#div text: seconds]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instead of keeping the old record, bind replaces it with a new record. Therefore we only ever have one time on the screen, the current time. That&amp;rsquo;s because the display of the old time was supported by data that is no longer there. With a bind, &lt;strong&gt;if the supporting records are removed, then the bound records are removed&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;

&lt;p&gt;When matching on an event like a &lt;code&gt;#click&lt;/code&gt;, a &lt;code&gt;commit&lt;/code&gt; is usually more appropriate. When an event occurs, a record representing the event is added to the Eve DB. That record exists for exactly one &amp;ldquo;instant&amp;rdquo;, and then it is removed from the database. During that &amp;ldquo;instant&amp;rdquo;, any block matching on that event will be satisfied.&lt;/p&gt;

&lt;p&gt;If you &lt;code&gt;bind&lt;/code&gt; on the event, then the result will disappear as soon as the event does. Essentially, the result will be instantaneous, and it may appear the event never fired. However, If you &lt;code&gt;commit&lt;/code&gt; on the event, then that effect will persist after the event has been removed.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;see-also&#34;&gt;See Also&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;bind.md&#34;&gt;bind&lt;/a&gt; | &lt;a href=&#34;context.md&#34;&gt;contexts&lt;/a&gt; | &lt;a href=&#34;match.md&#34;&gt;match&lt;/a&gt; | &lt;a href=&#34;match-phase.md&#34;&gt;match phase&lt;/a&gt; | &lt;a href=&#34;action-phase.md&#34;&gt;action phase&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/contents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/contents/</guid>
      <description>

&lt;p align=&#34;center&#34;&gt;
  &lt;img src=&#34;http://www.witheve.com/logo.png&#34; alt=&#34;Eve logo&#34; width=&#34;10%&#34; /&gt;
&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;intro.md&#34;&gt;Introduction&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;installation.md&#34;&gt;Getting Eve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;running.md&#34;&gt;Running Eve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;help.md&#34;&gt;Getting Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;model.md&#34;&gt;Programming Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;core.md&#34;&gt;Core Language&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;blocks.md&#34;&gt;Blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;records.md&#34;&gt;Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;equivalence.md&#34;&gt;Equivalence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;names.md&#34;&gt;Names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;tags.md&#34;&gt;Tags&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;match-phase.md&#34;&gt;Match Phase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;match.md&#34;&gt;match&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;expressions.md&#34;&gt;Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;aggregates.md&#34;&gt;Aggregates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;functions.md&#34;&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;if.md&#34;&gt;if-then&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;not.md&#34;&gt;not&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;is.md&#34;&gt;is&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;action-phase.md&#34;&gt;Action Phase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;commit.md&#34;&gt;commit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;bind.md&#34;&gt;bind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;action-operators.md&#34;&gt;Action Operators&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;set.md&#34;&gt;Set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;add.md&#34;&gt;Add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;remove.md&#34;&gt;Remove&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;merge.md&#34;&gt;Merge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;context.md&#34;&gt;Contexts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;standard-library.md&#34;&gt;Standard Library&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;strings/strings.md&#34;&gt;Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;math/math.md&#34;&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;datetime/datetime.md&#34;&gt;Date &amp;amp; Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;statistics/statistics.md&#34;&gt;Statistics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Appendix

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;ebnf.md&#34;&gt;Appendix A: Formal Syntax Specification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;glossary.md&#34;&gt;Glossary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;index.md&#34;&gt;Index&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/context/</guid>
      <description>

&lt;h1 id=&#34;contexts&#34;&gt;Contexts&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/core/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/core/</guid>
      <description>

&lt;h1 id=&#34;core-language&#34;&gt;Core Language&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/datetime/date/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/datetime/date/</guid>
      <description>

&lt;h2 id=&#34;not-yet-implemented&#34;&gt;Not Yet Implemented&lt;/h2&gt;

&lt;h1 id=&#34;date&#34;&gt;date&lt;/h1&gt;

&lt;p&gt;provides the current date&lt;/p&gt;

&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[#date day month year]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;attributes&#34;&gt;Attributes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;day - current numeric day&lt;/li&gt;
&lt;li&gt;month - current numeric month&lt;/li&gt;
&lt;li&gt;year - current numeric year&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;Provides the current day as reported by the system clock.&lt;/p&gt;

&lt;p&gt;Time updates at the frequency of the smallest selected in the record.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Prints the current date as a formatted string.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match
  [#date month day year]
bind
  [#div text: &amp;quot;Today is {{month}}/{{day}}/{{year}}&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;see-also&#34;&gt;See Also&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;time.md&#34;&gt;time&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/datetime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/datetime/</guid>
      <description>

&lt;h1 id=&#34;date-time&#34;&gt;Date &amp;amp; Time&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;time.md&#34;&gt;time&lt;/a&gt; - The current system time&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;date.md&#34;&gt;date&lt;/a&gt; - The current system date&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/datetime/time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/datetime/time/</guid>
      <description>

&lt;h1 id=&#34;time&#34;&gt;time&lt;/h1&gt;

&lt;p&gt;provides the current time&lt;/p&gt;

&lt;h2 id=&#34;syntax&#34;&gt;Syntax&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[#time hours minutes seconds milliseconds]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;attributes&#34;&gt;Attributes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;hours - current hour&lt;/li&gt;
&lt;li&gt;minutes - current minute&lt;/li&gt;
&lt;li&gt;seconds - current second&lt;/li&gt;
&lt;li&gt;milliseconds - current millisecond &lt;strong&gt;Not Yet Implemented&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;Provides the current time as reported by the system clock.&lt;/p&gt;

&lt;p&gt;Time updates at the frequency of the smallest unit of time selected in the record.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Prints the current time as a formatted string.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;match
  [#time hours minutes seconds]
bind
  [#div text: &amp;quot;The time is {{hours}}:{{minutes}}:{{seconds}}&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;see-also&#34;&gt;See Also&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;date.md&#34;&gt;date&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://witheve.github.io/docs/handbook/ebnf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://witheve.github.io/docs/handbook/ebnf/</guid>
      <description>

&lt;h1 id=&#34;eve-ebnf-grammar&#34;&gt;Eve EBNF grammar&lt;/h1&gt;

&lt;p&gt;The following specification is expressed in &lt;a href=&#34;https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_Form&#34;&gt;Extended Backus–Naur Form&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;newline = &amp;quot;\n&amp;quot;
whitespace =  &amp;quot; &amp;quot; | &amp;quot;\t&amp;quot; | &amp;quot;,&amp;quot; | newline;
unicode = ? all unicode chars - whitespace ?;
specials = &amp;quot;@&amp;quot; | &amp;quot;#&amp;quot; | &amp;quot;.&amp;quot; | &amp;quot;,&amp;quot; | &amp;quot;(&amp;quot; | &amp;quot;)&amp;quot; | &amp;quot;[&amp;quot; | &amp;quot;]&amp;quot; | &amp;quot;{&amp;quot; | &amp;quot;}&amp;quot; | &amp;quot;⦑&amp;quot; | &amp;quot;⦒&amp;quot; | &amp;quot;:&amp;quot; | &amp;quot;\&amp;quot;&amp;quot;;
non-special = unicode - specials;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;values&#34;&gt;Values&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;none = &amp;quot;none&amp;quot;;
boolean = &amp;quot;true&amp;quot; | &amp;quot;false&amp;quot;;
numeric = &amp;quot;0&amp;quot; .. &amp;quot;9&amp;quot;;
number = [&amp;quot;-&amp;quot;] {numeric} [&amp;quot;.&amp;quot; {numeric}];
string-interpolation = &amp;quot;{{&amp;quot; expression &amp;quot;}}&amp;quot;;
string = &amp;quot;\&amp;quot;&amp;quot; {string-interpolation | unicode - &amp;quot;\&amp;quot;&amp;quot; | &amp;quot;\\\&amp;quot;&amp;quot; | whitespace} &amp;quot;\&amp;quot;&amp;quot;;
uuid =&amp;quot;⦑&amp;quot; (unicode - specials)  &amp;quot;⦒&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;keywords-and-identifiers&#34;&gt;Keywords and Identifiers&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;match = &amp;quot;match&amp;quot;;
action = &amp;quot;bind&amp;quot; | &amp;quot;commit&amp;quot;;
if = &amp;quot;if&amp;quot;;
then = &amp;quot;then&amp;quot;;
else = &amp;quot;else&amp;quot;;
is = &amp;quot;is&amp;quot;;
not = &amp;quot;not&amp;quot;;
keyword = match | action | if | then | else | boolean | is | not
non-special-non-numeric = non-special - numeric
identifier = (non-special-non-numeric {non-special}) - keyword - &amp;quot;```&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;comparisons&#34;&gt;Comparisons&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;equality = &amp;quot;:&amp;quot; | &amp;quot;=&amp;quot;;
comparator = equality | &amp;quot;&amp;gt;&amp;quot; | &amp;quot;&amp;lt;&amp;quot; | &amp;quot;&amp;gt;=&amp;quot; | &amp;quot;&amp;lt;=&amp;quot; | &amp;quot;!=&amp;quot;;
comparison = expression whitespace+ comparator whitespace+ expression;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;functions&#34;&gt;Functions&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;infix-op = &amp;quot;*&amp;quot; | &amp;quot;+&amp;quot; | &amp;quot;-&amp;quot; | &amp;quot;/&amp;quot;;
infix = expression infix-op expression;
function = identifier &amp;quot;[&amp;quot; [attribute] {whitespace+ attribute} &amp;quot;]&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;records-and-attributes&#34;&gt;Records and attributes&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;record = &amp;quot;[&amp;quot; [attribute] {whitespace+ attribute} &amp;quot;]&amp;quot;
attribute = name | tag | attribute-not | identifier {whitespace+ comparator whitespace+ expression};
name = &amp;quot;@&amp;quot; (identifier | string);
tag = &amp;quot;#&amp;quot; (identifier | string);
attribute-not = not &amp;quot;(&amp;quot; whitespace* identifier [comparator whitespace+ expression] &amp;quot;)&amp;quot;;
attribute-access = identifier whitespace* {&amp;quot;.&amp;quot; whitespace* identifier}+
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;special-forms&#34;&gt;Special forms&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;not-statement = not &amp;quot;(&amp;quot; statement {whitespace+ statement} &amp;quot;)&amp;quot;;
is-expression = is &amp;quot;(&amp;quot; comparison &amp;quot;)&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;expression&#34;&gt;Expression&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;expression = number | identifier | function | infix | record | attribute-access;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;statements&#34;&gt;Statements&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;comment = &amp;quot;//&amp;quot; {unicode | whitespace - newline} newline
statement = record | function | not-statement | if-statement | comparison | comment
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;action-statements&#34;&gt;Action statements&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;create-action = (identifier whitespace+ equality whitespace+ record) | record
merge-action = (identifier | attribute-access) whitespace+ &amp;quot;&amp;lt;-&amp;quot; whitespace+ record
name-tag-action = (identifier | attribute-access) whitespace+ (&amp;quot;+=&amp;quot; | &amp;quot;-=&amp;quot;) whitespace+ (name | tag)
remove-action = (identifier | attribute-access) whitespace+ &amp;quot;:=&amp;quot; whitespace+ none
attribute-action = attribute-access whitespace+ (&amp;quot;:=&amp;quot; | &amp;quot;+=&amp;quot; | &amp;quot;-=&amp;quot;) whitespace+ expression
action-operation = create-action | merge-action | name-tag-action | remove-action | attribute-action
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;if-then&#34;&gt;If-Then&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;group = &amp;quot;(&amp;quot; expression {whitespace+ expression} &amp;quot;)&amp;quot;
binding-group = &amp;quot;(&amp;quot; identifier {whitespace+ identifier} &amp;quot;)&amp;quot;
if-result = (group | expression);
if-expression = if whitespace+ {statement whitespace+} then whitespace+ if-result;
else-if-expression = else whitespace+ if whitespace+ {statement whitespace+} then whitespace+ if-result;
else-expression = else whitespace+ if-result
if-statement = (identifier | binding-group) whitespace+ equality whitespace+
               if-expression
               {whitespace+ (if-expression | else-if-expression)}
               [else-expression]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sections&#34;&gt;Sections&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;context-declaration = name | &amp;quot;(&amp;quot; {name whitespace+} &amp;quot;)&amp;quot;
match-section = match whitespace+ [context-declaration whitespace+] {statement whitespace}
action-section = action whitespace+ [context-declaration whitespace+] {action-statement whitespace}
section = match-sectiong | action-section
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;program-and-blocks&#34;&gt;Program and blocks&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;fence-symbol = &amp;quot;```&amp;quot;
start-fence = newline fence-symbol [whitespace* (unicode - newline)] newline
end-fence = newline fence-symbol newline
block = start-fence {section} end-fence
program = {unicode | whitespace | block}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>